{"version":3,"file":"static/js/181.906e6a1f.chunk.js","mappings":"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","sources":["components/SectionName/SectionName.styled.jsx","components/SectionName/SectionName.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","utils/sortContactsByName.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/PhoneBookPage/PhoneBookPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SubTitle = styled.h2`\n  margin-bottom: 20px;\n  text-transform: uppercase;\n  text-shadow: 3px 3px 3px rgba(150, 150, 150, 0.69);\n  color: rgb(144,58,180);\n  \n`;","import PropTypes from 'prop-types';\nimport { SubTitle } from './SectionName.styled';\n\nexport default function SectionName({ title }) {\n    return (\n        <>\n            {title && <SubTitle>{title}</SubTitle>}\n        </>\n    );\n};\n\nSectionName.propTypes = {\n    title: PropTypes.string,\n};","import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const ContactSubmitForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background: rgb(144,58,180);\n  background: linear-gradient(90deg, rgba(144,58,180,1) 40%, rgba(69,69,252,1) 86%);\n  box-shadow: 0px 2px 10px -3px;\n`;\n\nexport const FormInputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0px 20px;\n  font-size: 24px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 4px;\n  padding: 4px;\n  font-size: 16px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n  background-color: ghostwhite;\n`;\n\nexport const FormSubmitBtn = styled.button`  \n  width: 160px;\n  height: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  text-transform: uppercase;\n  border: 0px;\n  border-radius: 20px;\n  background-color: rgb(144,58,180,0);;\n  color: white;\n  box-shadow: none;\n  transition: all 250ms ease-in-out; \n\n  :hover, :focus {\n    box-shadow:  0px 0px 9px rgba(0, 0, 0, 1),\n                inset 0px 0px 0px 0px #0000004d;\n  }\n`;","import { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport {useGetAllContactsQuery,useAddContactMutation,} from 'services/phoneBookApi';\n// import { getContactsItems, addContact } from 'redux/contacts/slice';\nimport { showInfoMessage, showSuccessMessage, showErrorMessage } from 'utils/notofications';\nimport {\n  FormWrapper,\n  ContactSubmitForm,\n  FormInputLabel,\n  FormInput,\n  FormSubmitBtn,\n} from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data: contacts } = useGetAllContactsQuery();\n  const [addContact, { isLoading: isCreating }] = useAddContactMutation();\n  // const contacts = useSelector(getContactsItems);\n  // const dispatch = useDispatch();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const onNameChange = evt => {\n    setName(evt.currentTarget.value);\n  };\n\n  const onNumberChange = evt => {\n    setNumber(evt.currentTarget.value);\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onContactFormSubmit = evt => {\n    evt.preventDefault();\n\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === name.toLowerCase() \n      )\n    ) {\n      showInfoMessage('This contact is already in your phonebook');\n      return;\n    }\n\n    if (contacts.find(contact => contact.number === number)) {\n      showInfoMessage('This phone number is already in your phonebook');\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    try {\n      addContact(newContact);\n      showSuccessMessage('New contact has been added in your phonebook');\n    } catch (error) {\n      console.log(error.message);\n      showErrorMessage('Something goes wrong, new contact was not created');\n    };\n      formReset();\n  }\n\n\n\n  return (\n    <FormWrapper>\n      <ContactSubmitForm onSubmit={onContactFormSubmit}>\n        <FormInputLabel htmlFor={nameInputId}>\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Type name here\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={onNameChange}\n            id={nameInputId}\n            required\n          />\n        </FormInputLabel>\n        <FormInputLabel htmlFor={numberInputId}>\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Type number here\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={onNumberChange}\n            id={numberInputId}\n            required\n          />\n        </FormInputLabel>\n        <FormSubmitBtn type=\"submit\" disabled={isCreating}>\n          {isCreating ? 'Adding...' : 'Add contact'}\n        </FormSubmitBtn>\n      </ContactSubmitForm>\n    </FormWrapper> \n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  border: 1px solid darkgray;\n  background: rgb(144,58,180);\n  background: linear-gradient(90deg, rgba(144,58,180,1) 40%, rgba(69,69,252,1) 86%);\n  box-shadow: 0px 2px 10px -3px;\n  border-radius: 5px;\n  width: 354px;\n`;\n\nexport const FilterInputLabel = styled.label`\n  margin: 10px 20px 10px 20px;\n  font-size: 18px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 300px;\n  margin-top: 4px;\n  padding: 4px;\n  font-size: 16px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { getFilterValue, changeFilter } from 'redux/filter/filter-slice';\nimport { FilterWrapper, FilterInputLabel, FilterInput } from './Filter.styled';\n\nexport default function Filter() {\n    const filterValue = useSelector(getFilterValue);\n    const dispatch = useDispatch();\n\n    const filterInputId = nanoid();\n\n    const onFilterChange = evt => {\n    dispatch(changeFilter(evt.currentTarget.value));\n    };\n\n    return (\n    <FilterWrapper>\n        <FilterInputLabel htmlFor={filterInputId}>\n        Find contacts by name\n        <FilterInput\n            type=\"text\"\n            placeholder=\"Search field\"\n            id={filterInputId}\n            value={filterValue}\n            onChange={onFilterChange}\n        />\n        </FilterInputLabel>\n    </FilterWrapper>\n    );\n}\n","export default function sortContactsByName(a, b) {\n    return a.name.localeCompare(b.name);\n};","import styled from '@emotion/styled';\n\nexport const ContactItemWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 420px;\n  height: 50px;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background-color: white;\n`;\n\nexport const ContactItemName = styled.p`\n  margin-left: 20px;\n  font-size: 18px;\n`;\n\nexport const ContactItemNum = styled.a`\n  margin-left: auto;\n  font-size: 18px;\n  text-decoration: none;\n  transition: all 250ms ease-in-out;\n\n  :hover, :focus {\n    color: #39b0ff;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  height: 27px;\n  padding: 0;\n  margin: 0 20px 0 50px;\n  color: rgb(144,58,180);;\n  background-color: transparent;\n  border: none;\n  transition: all 250ms ease-in-out;\n\n  :hover, :focus {\n    color: #39b0ff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'services/phoneBookApi';\nimport { showSuccessMessage, showErrorMessage } from 'utils/notofications';\nimport { FaTrashAlt, FaSpinner } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport {\n    ContactItemWrapper,\n    ContactItemName,\n    ContactItemNum,\n    DeleteBtn,\n} from './ContactItem.styled';\n\nexport default function ContactItem({ id, name, number }) {\n    const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n    const onContactdelete = async (contactId, contactName) => {\n        try {\n            await deleteContact(contactId);\n            showSuccessMessage(\n                `\"${contactName}\" has been deleted from your phonebook`\n            );\n        }\n        catch (error) {\n            console.log(error.message);\n            showErrorMessage(\n                `Something goes wrong, \"${contactName}\" was not deleted`\n            );\n        };\n    };\n\n\n    return (\n    <ContactItemWrapper>\n        <ContactItemName>{name}</ContactItemName>\n        <ContactItemNum href={`tel:${number}`}>{number}</ContactItemNum>\n        <DeleteBtn type=\"button\" onClick={() => onContactdelete(id, name)} disabled ={isDeleting} aria-label=\"Delete contact\">\n        <IconContext.Provider value={{ size: '2em' }}>\n        {isDeleting ? <FaSpinner/> : <FaTrashAlt /> }\n        </IconContext.Provider>\n        </DeleteBtn>\n    </ContactItemWrapper>\n    );\n}\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}; ","import styled from '@emotion/styled';\n\nexport const TotalContactsText = styled.p`\n  font-size: 18px;\n`;\n\nexport const TotalContactsNum = styled.span`\n  margin-left: 4px;\n  color: blue;\n`;\n\nexport const PhonebookList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 460px;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background: rgb(144,58,180);\n  background: linear-gradient(90deg, rgba(144,58,180,1) 40%, rgba(69,69,252,1) 86%);\n  box-shadow: 0px 2px 10px -3px;\n`;\n\nexport const ListElement = styled.li`\n  :first-of-type {\n    padding-top: 20px;\n  }\n\n  :last-child {\n    padding-bottom: 20px;\n  }\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const NoMatchesText = styled.p`\n  margin: 20px 0;\n  font-size: 18px;\n`;\n\nexport const NoContactsText = styled.p`\n  font-size: 18px;\n`;\nexport const LoaderItem = styled.p`\n  font-size: 24px;\n  color: darkgray;\n`;\nexport const FetchErrorText = styled.p`\n  margin-top: 20px;\n  font-size: 18px;\n`;\n\nexport const RefetchBtn = styled.button`\n  display: block;\n  padding: 0;\n  margin-top: 20px;\n  color: #3498db;\n  background-color: transparent;\n  border: none;\n  transition: all 250ms ease-in-out;\n  :hover,\n  :focus {\n    color: #39b0ff;\n  }\n`;","\nimport { useSelector} from 'react-redux';\nimport { getFilterValue } from 'redux/filter/filter-slice';\nimport sortContactsByName from 'utils/sortContactsByName';\nimport ContactItem from 'components/ContactItem';\nimport { FaRedo } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport {\n    TotalContactsText,\n    TotalContactsNum,PhonebookList,\n    ListElement,LoaderItem,\n    NoMatchesText,NoContactsText,\n    FetchErrorText,RefetchBtn,\n} from './ContactList.styled';\nimport { useGetAllContactsQuery } from 'services/phoneBookApi';\n\nexport default function ContactList() {\n    const {\n    data = [],\n    isLoading,\n    isError,\n    refetch,\n    } = useGetAllContactsQuery();\n\n    const filterValue = useSelector(getFilterValue);\n\n    const totalContactsAmount = () => {\n    if (!data) {\n        return 0;\n    }\n    return data.length;\n    };\n\n    const getVisibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return data\n        .filter(data =>\n        data.name.toLowerCase().includes(normalizedFilter) ||\n        data.number.includes(normalizedFilter)\n    )\n    .sort(sortContactsByName);\n    };\n\n    const visibleContacts = getVisibleContacts();\n\n    return (\n    <>\n        {isLoading ? (\n        <LoaderItem>Loading...</LoaderItem>\n        ) : totalContactsAmount() > 0 ? (\n        <>\n            <TotalContactsText>\n            Contacts amount:{' '}\n            <TotalContactsNum>{totalContactsAmount()}</TotalContactsNum>\n            </TotalContactsText>\n            <PhonebookList>\n            {visibleContacts.length ? (\n                visibleContacts.map(({ id, name, number }) => (\n                <ListElement key={id}>\n                    <ContactItem id={id} name={name} number={number} />\n                </ListElement>\n            ))\n            ) : (\n                <NoMatchesText>No contact matches</NoMatchesText>\n            )}\n            </PhonebookList>\n        </>\n        ) : (\n        <>\n            <NoContactsText> There are no contacts in your phonebook </NoContactsText>\n        </>\n        )}\n        {isError && (\n        <>\n            <FetchErrorText>Fetch error! Refetch contacts</FetchErrorText>\n            <RefetchBtn type=\"button\" onClick={() => refetch()}>\n            <IconContext.Provider value={{ size: '5em' }}>\n                <FaRedo />\n            </IconContext.Provider>\n            </RefetchBtn>\n        </>\n        )}\n    </>\n    );\n}","import SectionName from \"components/SectionName\";\nimport ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\n\nexport default function PhoneBookPage() {\n    return (\n        <>\n            <SectionName title=\"Add contact\" />\n            <ContactForm />\n            <SectionName title=\"Contacts\" />\n            <Filter />\n            <ContactList />\n        </>\n    );\n}"],"names":["SubTitle","styled","SectionName","title","FormWrapper","ContactSubmitForm","FormInputLabel","FormInput","FormSubmitBtn","ContactForm","useState","name","setName","number","setNumber","contacts","useGetAllContactsQuery","data","useAddContactMutation","addContact","isCreating","isLoading","nameInputId","nanoid","numberInputId","onSubmit","evt","preventDefault","find","contact","toLowerCase","showInfoMessage","newContact","showSuccessMessage","error","console","log","message","showErrorMessage","htmlFor","type","placeholder","pattern","value","onChange","currentTarget","id","required","disabled","FilterWrapper","FilterInputLabel","FilterInput","Filter","filterValue","useSelector","getFilterValue","dispatch","useDispatch","filterInputId","changeFilter","sortContactsByName","a","b","localeCompare","ContactItemWrapper","ContactItemName","ContactItemNum","DeleteBtn","i","ContactItem","useDeleteContactMutation","deleteContact","isDeleting","onContactdelete","contactId","contactName","href","onClick","size","TotalContactsText","TotalContactsNum","PhonebookList","ListElement","NoMatchesText","NoContactsText","LoaderItem","FetchErrorText","RefetchBtn","ContactList","isError","refetch","totalContactsAmount","length","visibleContacts","normalizedFilter","filter","includes","sort","getVisibleContacts","map","PhoneBookPage"],"sourceRoot":""}