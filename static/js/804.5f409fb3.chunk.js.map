{"version":3,"file":"static/js/804.5f409fb3.chunk.js","mappings":"yQASe,SAASA,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAElBE,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACrC,OAAQD,GACJ,IAAK,QACD,OAAOV,EAASW,GACpB,IAAK,WACD,OAAOT,EAAYS,GACvB,QACI,SAeZ,OACI,UAAC,EAAAC,YAAD,YACI,SAAC,EAAAC,UAAD,qCAEA,UAAC,EAAAC,UAAD,CAAWC,SAVE,SAAAC,GACjBA,EAAIC,iBACJd,EAASe,EAAAA,GAAAA,MAAqB,CAAEnB,MAAAA,EAAOE,SAAAA,KANvCD,EAAS,IACTE,EAAY,KAa2BiB,aAAa,MAAhD,WACI,UAAC,EAAAC,eAAD,CAAgBC,QAAShB,EAAzB,oBAEI,SAAC,EAAAiB,UAAD,CACIC,KAAK,QACLb,KAAK,QACLc,YAAY,eACZb,MAAOZ,EACP0B,SAAUjB,EACVkB,GAAIrB,EACJsB,UAAQ,QAIhB,UAAC,EAAAP,eAAD,CAAgBC,QAASd,EAAzB,sBAEI,SAAC,EAAAe,UAAD,CACIC,KAAK,WACLb,KAAK,WACLc,YAAY,iBACZb,MAAOV,EACPwB,SAAUjB,EACVkB,GAAInB,EACJoB,UAAQ,QAGhB,SAAC,EAAAC,cAAD,CAAeL,KAAK,SAApB,4B,6QCpEHX,EAAciB,EAAAA,EAAAA,IAAH,kHAOXhB,EAAYgB,EAAAA,EAAAA,GAAH,4IAQTf,EAAYe,EAAAA,EAAAA,KAAH,gNAUTT,EAAiBS,EAAAA,EAAAA,MAAH,wHAOdP,EAAYO,EAAAA,EAAAA,MAAH,wLAUTD,EAAgBC,EAAAA,EAAAA,OAAH,8d","sources":["pages/LoginPage/LoginPage.jsx","pages/LoginPage/LoginPage.styled.jsx"],"sourcesContent":["import { useState } from \"react\"; \nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from 'redux/auth';\nimport {FormWrapper, FormTitle,\n        LogInForm, FormInputLabel,\n        FormInput, FormSubmitBtn\n} from \"./LoginPage.styled\";\n    \nexport default function LoginPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const emailInputId = nanoid();\n    const passwordInputId = nanoid();\n\n    const onInputChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n    const formReset = () => {\n        setEmail('');\n        setPassword('');\n    };\n\n    const onFormSubmit = evt => {\n        evt.preventDefault();\n        dispatch(authOperations.logIn({ email, password }));\n        formReset();\n    }\n\n    return (\n        <FormWrapper>\n            <FormTitle>Log in to application</FormTitle>\n\n            <LogInForm onSubmit={onFormSubmit} autoComplete='off'>\n                <FormInputLabel htmlFor={emailInputId}>\n                    E-mail\n                    <FormInput\n                        type='email'\n                        name='email'\n                        placeholder='Enter e-mail'\n                        value={email}\n                        onChange={onInputChange}\n                        id={emailInputId}\n                        required\n                    />\n                </FormInputLabel>\n\n                <FormInputLabel htmlFor={passwordInputId}>\n                    Password\n                    <FormInput\n                        type='password'\n                        name='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={onInputChange}\n                        id={passwordInputId}\n                        required\n                    />\n                </FormInputLabel>\n                <FormSubmitBtn type=\"submit\">Log in</FormSubmitBtn>\n            </LogInForm>\n        </FormWrapper>\n    );\n}","import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 80px;\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 30px;\n  text-align: center;\n  text-transform: uppercase;\n  color: #3498db;\n`;\n\nexport const LogInForm = styled.form`\n  width: fit-content;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background-color: white;\n  box-shadow: 0px 2px 10px -3px;\n`;\n\nexport const FormInputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0px 20px;\n  font-size: 24px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 4px;\n  padding: 4px;\n  font-size: 16px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n  background-color: ghostwhite;\n`;\n\nexport const FormSubmitBtn = styled.button`\n  width: 160px;\n  height: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  text-transform: uppercase;\n  border: 0px;\n  border-radius: 20px;\n  background-color: #3498db;\n  color: white;\n  box-shadow: none;\n  transition: all 250ms ease-in-out;\n  :hover,\n  :focus {\n    background-color: #39b0ff;\n    box-shadow: 0px 4px 4px #00000026, inset 0px 0px 0px 0px #0000004d;\n  }\n`;"],"names":["LoginPage","useState","email","setEmail","password","setPassword","dispatch","useDispatch","emailInputId","nanoid","passwordInputId","onInputChange","target","name","value","FormWrapper","FormTitle","LogInForm","onSubmit","evt","preventDefault","authOperations","autoComplete","FormInputLabel","htmlFor","FormInput","type","placeholder","onChange","id","required","FormSubmitBtn","styled"],"sourceRoot":""}