{"version":3,"file":"static/js/970.01caa52d.chunk.js","mappings":"0QAUe,SAASA,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACrC,OAAQd,GACJ,IAAK,OACD,OAAOC,EAAQa,GAEnB,IAAK,QACD,OAAOX,EAASW,GAEpB,IAAK,WACD,OAAOT,EAAYS,KAgB/B,OACA,UAAC,EAAAC,YAAD,YACI,SAAC,EAAAC,UAAD,4BAEA,UAAC,EAAAC,aAAD,CAAcC,SATG,SAAAC,GACjBA,EAAIC,iBACJd,EAASe,EAAAA,GAAAA,SAAwB,CAAErB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAPhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAY0BiB,aAAa,MAAnD,WACA,UAAC,EAAAC,eAAD,CAAgBC,QAAShB,EAAzB,kBAEI,SAAC,EAAAiB,UAAD,CACAC,KAAK,OACL1B,KAAK,OACL2B,YAAY,kBACZb,MAAOd,EACP4B,SAAUhB,EACViB,GAAIrB,EACJsB,UAAQ,QAIZ,UAAC,EAAAP,eAAD,CAAgBC,QAASd,EAAzB,oBAEI,SAAC,EAAAe,UAAD,CACAC,KAAK,QACL1B,KAAK,QACL2B,YAAY,oBACZb,MAAOZ,EACP0B,SAAUhB,EACViB,GAAInB,EACJoB,UAAQ,QAIZ,UAAC,EAAAP,eAAD,CAAgBC,QAASb,EAAzB,sBAEI,SAAC,EAAAc,UAAD,CACAC,KAAK,WACL1B,KAAK,WACL2B,YAAY,eACZb,MAAOV,EACPwB,SAAUhB,EACViB,GAAIlB,EACJmB,UAAQ,QAIZ,SAAC,EAAAC,cAAD,CAAeL,KAAK,SAApB,8B,+QCxFKX,EAAciB,EAAAA,EAAAA,IAAH,kHAOXhB,EAAYgB,EAAAA,EAAAA,GAAH,uJAQTf,EAAee,EAAAA,EAAAA,KAAH,0SAWZT,EAAiBS,EAAAA,EAAAA,MAAH,wHAOdP,EAAYO,EAAAA,EAAAA,MAAH,wLAUTD,EAAgBC,EAAAA,EAAAA,OAAH,kf","sources":["pages/RegisterPage/RegisterPage.jsx","pages/RegisterPage/RegisterPage.styled.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"redux/auth\";\nimport {\n    FormWrapper, FormTitle,\n    RegisterForm, FormInputLabel,\n    FormInput, FormSubmitBtn,\n} from './RegisterPage.styled';\n\nexport default function RegisterPage() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const nameInputId = nanoid();\n    const emailInputId = nanoid();\n    const passwordInputId = nanoid();\n\n    const onInputChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            \n            case 'email':\n                return setEmail(value);\n            \n            case 'password':\n                return setPassword(value);\n            default:\n        }\n    };\n\n    const formReset = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n    };\n\n    const onFormSubmit = evt => {\n        evt.preventDefault();\n        dispatch(authOperations.register({ name, email, password }));\n        formReset();\n    };\n    return (\n    <FormWrapper>\n        <FormTitle>Registration</FormTitle>\n\n        <RegisterForm onSubmit={onFormSubmit} autoComplete=\"off\">\n        <FormInputLabel htmlFor={nameInputId}>\n            Name\n            <FormInput\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            value={name}\n            onChange={onInputChange}\n            id={nameInputId}\n            required\n            />\n        </FormInputLabel>\n\n        <FormInputLabel htmlFor={emailInputId}>\n            E-mail\n            <FormInput\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your e-mail\"\n            value={email}\n            onChange={onInputChange}\n            id={emailInputId}\n            required\n            />\n        </FormInputLabel>\n\n        <FormInputLabel htmlFor={passwordInputId}>\n            Password\n            <FormInput\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Set password\"\n            value={password}\n            onChange={onInputChange}\n            id={passwordInputId}\n            required\n            />\n        </FormInputLabel>\n\n        <FormSubmitBtn type=\"submit\">Register</FormSubmitBtn>\n        </RegisterForm>\n    </FormWrapper>\n    );\n}","import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 80px;\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 30px;\n  text-align: center;\n  text-transform: uppercase;\n  color: rgba(144,58,180,1);\n`;\n\nexport const RegisterForm = styled.form`\n  width: fit-content;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background: rgb(144,58,180);\n  background: linear-gradient(90deg, rgba(144,58,180,1) 40%, rgba(69,69,252,1) 86%);\n  box-shadow: 0px 2px 10px -3px;\n`;\n\nexport const FormInputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0px 20px;\n  font-size: 24px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 4px;\n  padding: 4px;\n  font-size: 16px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n  background-color: ghostwhite;\n`;\n\nexport const FormSubmitBtn = styled.button`\n  width: 160px;\n  height: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  text-transform: uppercase;\n  border: 0px;\n  border-radius: 20px;\n  background-color:rgba(69,69,252,1);\n  color: white;\n  box-shadow: none;\n  transition: all 250ms ease-in-out;\n  :hover,\n  :focus {\n    background-color: rgba(144,58,180,1);\n    box-shadow: 0px 4px 4px #00000026, inset 0px 0px 0px 0px #0000004d;\n  }\n`;"],"names":["RegisterPage","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","nameInputId","nanoid","emailInputId","passwordInputId","onInputChange","target","value","FormWrapper","FormTitle","RegisterForm","onSubmit","evt","preventDefault","authOperations","autoComplete","FormInputLabel","htmlFor","FormInput","type","placeholder","onChange","id","required","FormSubmitBtn","styled"],"sourceRoot":""}